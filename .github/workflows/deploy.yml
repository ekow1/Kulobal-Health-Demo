name: Deploy Backend API

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: api/package-lock.json
        
    - name: Install dependencies
      run: |
        cd api
        npm ci
        
    - name: Build application
      run: |
        cd api
        npm run build
        
    - name: Deploy to VPS
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USERNAME }}
        key: ${{ secrets.VPS_SSH_KEY }}
        passphrase: ${{ secrets.VPS_SSH_PASSPHRASE }}
        port: ${{ secrets.VPS_PORT }}
        script: |
          # Remove existing directory completely and create fresh
          rm -rf ~/kulobal-health-demo
          mkdir -p ~/kulobal-health-demo
          cd ~/kulobal-health-demo
          
          # Clone the repository
          git clone https://github.com/ekow1/Kulobal-Health-Demo.git .
          
          # Create .env file from GitHub secrets
          cat > api/.env << EOF
          MONGODB_URI=${{ secrets.MONGODB_URI }}
          JWT_SECRET=${{ secrets.JWT_SECRET }}
          CORS_ORIGIN=https://demo.ekowlabs.space
          PORT=5000
          NODE_ENV=production
          EOF
          
          # Navigate to api directory and deploy
          cd api
          
          # Stop any existing nginx processes
          sudo pkill nginx || true
          sudo systemctl stop nginx || true
          
          docker stack rm kulobal-stack || true
          docker build -f Dockerfile.backend -t kulobal-backend:latest .
          docker stack deploy -c docker-compose.yml kulobal-stack
          docker system prune -f
